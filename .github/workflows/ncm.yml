name: Build & Test

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    container:
      image: andreasbauer/libmoep-debian
      credentials:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    env:
      build-directory: ./build

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Cache Build directory
        id: cache
        uses: actions/cache@v2
        with:
          path: ${{ env.build-directory }}
          key: ${{ runner.os }}-ncm-v2

      - name: Prepare build directory # Create the ./build directory if it wasn't restored by the cache step
        if: steps.cache.outputs.cache-hit != 'true'
        run: mkdir ${{ env.build-directory }}

      - name: configure in ${{ env.build-directory }}
        if: steps.cache.outputs.cache-hit != 'true'
        run: ../configure
        working-directory: ${{ env.build-directory }}

      - name: Build
        run: make
        working-directory: ${{ env.build-directory }}

      - name: Run NCM
        run: ./ncm --help
        working-directory: ${{ env.build-directory }}

      - name: Run NCM Simulator
        # we can't test anything contained in the main file of the simulator
        # thus we just quickly run it without arguments to have a basic check its working.
        run: ./src/ncm_simulator
        working-directory: ${{ env.build-directory }}/ncm_simulator

      - name: Test NCM Simulator
        run: make check || cat tests/test-suite.log
        # Don't run make check in root directory, as e.g. libmoepgf has some long running benchmark tests
        working-directory: ${{ env.build-directory }}/ncm_simulator

      - name: Valgrind NCM Simulator
        run: CK_FORK=no valgrind --leak-check=full ./tests/check_simulator
        working-directory: ${{ env.build-directory }}/ncm_simulator
